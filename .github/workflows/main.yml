name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18'

    - name: Install Dependencies and Build Go Backend
      run: |
        go mod download
        go build -o backend ./backend/main.go

    - name: Build and Test React Frontend
      working-directory: frontend
      run: |
        npm install
        npm test -- --passWithNoTests
        npm run build

    - name: Upload Frontend Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: frontend/build

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18'

    - name: Install Dependencies
      run: go mod download

    - name: Run Unit Tests
      working-directory: backend
      run: go test ./...

  build-and-publish-docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: docker buildx create --use && docker buildx build --platform linux/amd64,linux/arm64 -t your-dockerhub-username/your-repository-name:latest .

    - name: Push Docker Image
      run: docker push aaraya0/ingsw3-final:latest

  deploy:
    needs: build-and-publish-docker
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend
        path: frontend

    - name: Output contents
      run: ls

    - name: Deploy to Server
      run: |
        echo "Deploy"
