name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Build and run 
      run: |
         docker compose up -d
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18'

    - name: Install Dependencies
      run: go mod download

    - name: Run Unit Tests
      working-directory: backend
      run: go test ./...

  docker-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
  
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Tag and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ingsw3-final-back:latest ./backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ingsw3-final-front:latest ./frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ingsw3-final-database:latest ./db
          
          docker push ${{ secrets.DOCKER_USERNAME }}/ingsw3-final-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ingsw3-final-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ingsw3-final-database:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  publish_to_gcr:
      needs: docker-publish
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
  
      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Log in to GCR
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/keyfile.json
          gcloud auth activate-service-account --key-file=/tmp/keyfile.json
      
      - name: Build and push Docker images to GCR
        run: |
          IMAGES=("ingsw3-final-back" "ingsw3-final-front" "ingsw3-final-database")
          for IMAGE_NAME in "${IMAGES[@]}"; do
            GCR_IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}
            cd $IMAGE_NAME  # Change directory to the one containing the Dockerfile
            docker buildx create --use
            docker buildx build --platform linux/amd64,linux/arm64 -t $GCR_IMAGE_NAME -f Dockerfile .
            docker push $GCR_IMAGE_NAME
            cd ..  # Return to the root directory
          done

      - name: Set Docker image tags
        run: |
          IMAGES=("ingsw3-final-back" "ingsw3-final-front" "ingsw3-final-database")
          for IMAGE_NAME in "${IMAGES[@]}"; do
            GCR_IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}
            docker tag $GCR_IMAGE_NAME $GCR_IMAGE_NAME:latest
          done
  
      - name: Push Docker images to GCR
        run: |
          IMAGES=("ingsw3-final-back" "ingsw3-final-front" "ingsw3-final-database")
          for IMAGE_NAME in "${IMAGES[@]}"; do
            GCR_IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}
            docker push $GCR_IMAGE_NAME:latest
          done
